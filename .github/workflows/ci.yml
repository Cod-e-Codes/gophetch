name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
    
    - name: Build
      run: go build -v .
    
    - name: Test build script
      run: |
        chmod +x build.sh
        ./build.sh --help
    
    - name: Test release script
      run: |
        chmod +x release.sh
        # Test dry run (don't actually build all platforms)
        echo "Testing release script syntax..."

  build:
    runs-on: ${{ matrix.os }}
    needs: test
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            ext: ""
          - os: windows-latest
            goos: windows
            goarch: amd64
            ext: ".exe"
          - os: macos-latest
            goos: darwin
            goarch: amd64
            ext: ""
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Build
      run: |
        $env:GOOS = "${{ matrix.goos }}"
        $env:GOARCH = "${{ matrix.goarch }}"
        go build -ldflags="-s -w" -o gophetch${{ matrix.ext }} .
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: gophetch-${{ matrix.goos }}-${{ matrix.goarch }}
        path: gophetch${{ matrix.ext }}
